#!/bin/bash

function send_streamer_request {
    date=$1
    project=$2
    subject=$3
    session=$4

    result="$(curl -sS \
        -u ${STREAMER_USERNAME}:${STREAMER_PASSWORD} \
        -X POST "${STREAMER_ENDPOINT}/opm/$date/$project/$subject/$session" \
        -H 'Content-Type: application/json' \
        -w '\n%{content_type}\n%{http_code}')"

    rm -f $tmpfile

    readarray -t result <<< "$result"

    status="${result[-1]}"
    content_type="${result[-2]}"
    result="${result[@]::${#result[@]}-2}"

    [ $status -ge 400 ] &&
        echo "(HTTP code $status) $result" >&2 &&
        return 1

    echo $result
}

function upload {

    date=$1
    project=$2
    subject=$3
    session=$4
    fprefix=$5

    base=/home/$STREAMER_FTP_USER/project/3055060.02/raw
    year=$(echo "$date" | cut -c1-4)

    # create directory structure at streamer ftp server
    sftp -i $STREAMER_FTP_KEY -P $STREAMER_FTP_PORT $STREAMER_FTP_USER@$STREAMER_FTP_HOST <<EOF
mkdir "$base/$year"
mkdir "$base/$year/$date"
mkdir "$base/$year/$date/$project"
mkdir "$base/$year/$date/$project/sub-$subject"
mkdir "$base/$year/$date/$project/sub-$subject/ses-opm$session"
bye
EOF

    # collect files to be uploaded
    tmpfile=$(mktemp)
    for fsuffix in "raw.fif" "channels.tsv"; do
        f="${fprefix}_${fsuffix}"
        if [ -f "$f" ]; then
	    cat <<EOF >>$tmpfile
put "$f" "$base/$year/$date/$project/sub-$subject/ses-opm$session/"
EOF
	fi
    done

    # upload files
    echo "bye" >>$tmpfile

    sftp -i $STREAMER_FTP_KEY -b $tmpfile -P $STREAMER_FTP_PORT $STREAMER_FTP_USER@$STREAMER_FTP_HOST
    ec=$?

    # upload files
    rm -f $tmpfile

    # exit code of the file upload
    return $ec
}

[ -z $STREAMER_ENDPOINT ] && echo "missing \$STREAMER_ENDPOINT" >&2 && exit 1
[ -z $STREAMER_USERNAME ] && echo "missing \$STREAMER_USERNAME" >&2 && exit 1
[ -z $STREAMER_PASSWORD ] && echo "missing \$STREAMER_PASSWORD" >&2 && exit 1
[ -z $STREAMER_FTP_HOST ] && echo "missing \$STREAMER_FTP_HOST" >&2 && exit 1
[ -z $STREAMER_FTP_PORT ] && echo "missing \$STREAMER_FTP_PORT" >&2 && exit 1
[ -z $STREAMER_FTP_USER ] && echo "missing \$STREAMER_FTP_USER" >&2 && exit 1
[ -z $STREAMER_FTP_KEY ] && echo "missing \$STREAMER_FTP_KEY" >&2 && exit 1

# open a domain socket to wait for signal to trigger transfer
# every transfer signal is a fieldline OPM output file path, e.g.
#
# /home/administrator/HEDscan/recordings/babyopm/sub-emptyroom/20240215_111755_sub-emptyroom_file-hpicoils_raw.fif
#
while read l; do

    ls "${l}"* >/dev/null 2>&1

    if [ $? -ne 0 ]; then
        echo "no matching file ${l}*" >&2
        continue
    fi

    l=$(echo "$l" | awk -F '_(raw|channels)\.' '{print $1}')

    fprefix=$(basename "$l")
    dprefix=$(dirname "$l")
    user=$(echo "$dprefix" | awk -F '/' '{print $3}')

    project=$(basename $(dirname "$dprefix"))
    subject=$(basename "$dprefix" | sed 's/^sub-//')

    date=$(echo $fprefix | awk -F '_' '{print $1}')
    time=$(echo $fprefix | awk -F '_' '{print $2}')
    session=$(echo $fprefix | awk -F 'file-' '{print $NF}')

    upload "$date" "$project" "$subject" "$session" "$l"

    echo "upload status: $ec"

    send_streamer_request "$date" "$project" "$subject" "$session"
done < <(umask 0; nc -klU /var/run/streamer-agent-opm.sock)
